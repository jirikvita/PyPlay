#!/usr/bin/python



# generated by Chat GPT3 pn 20.4.2023 by quesion:

# https://chat.openai.com/

# Could you please generate python code which plots (using matplotlib) a random generated histogram drawn from gaussian distrbution and then fits it with a user-defined gauss function?

# Certainly! Here's some Python code that generates a histogram from a Gaussian distribution and then fits it with a user-defined Gaussian function using the curve_fit function from scipy.optimize:


import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Define the Gaussian function to fit the histogram
def gauss(x, a, mu, sigma):
    return a * np.exp(-(x - mu)**2 / (2 * sigma**2))

# Generate some random data from a Gaussian distribution
data = np.random.normal(0, 1, 1000)

# Create the histogram
n, bins, patches = plt.hist(data, bins=30, density=True, alpha=0.5)

# Get the bin centers and normalize the histogram
bin_centers = (bins[1:] + bins[:-1]) / 2
bin_widths = (bins[1:] - bins[:-1])
n = n / np.sum(n * bin_widths)

# Fit the histogram with the Gaussian function
popt, pcov = curve_fit(gauss, bin_centers, n, p0=[1, 0, 1])

# Plot the histogram and the fitted Gaussian function
plt.plot(bin_centers, gauss(bin_centers, *popt), 'r-', label='fit')
plt.legend()

plt.show()

